name: Pylint

on: [push, pull_request]

permissions:          # Needed if you want to post PR comments from the workflow
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # (1) Install ALL project requirements, plus pylint
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      # (3) Fail build if pylint score falls below a threshold
      - name: Run pylint and store output in file
        run: |
          pylint --fail-under=8.0 $(git ls-files '*.py') | tee pylint-report.txt
          
      # $GITHUB_RUN_NUMBER increments with each workflow run; $GITHUB_SHA includes the commit hash; $GITHUB_REF_NAME can reflect the branch or tag name. 
      - name: Upload pylint report
        uses: actions/upload-artifact@v3
        with:
          name: pylint-report-${{ matrix.python-version }}-${{ github.run_number }}-${{ github.ref_name }}-${{ github.sha }}
          path: pylint-report.txt

      # (4) Optional: Comment on the Pull Request with lint results
      # This step only runs for pull_request events
      - name: Comment on PR with pylint results
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          # Grab the pull request number from the ref
          PR_NUMBER="$(echo $GITHUB_REF | cut -d/ -f3)"
          
          # Format the comment body; we wrap it in a code block for better readability
          COMMENT_BODY="$(printf '```\n%s\n```' "$(cat pylint-report.txt)")"
          
          # Post a comment via the GitHub API
          curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
               -X POST \
               -d "{\"body\": \"${COMMENT_BODY}\"}" \
               "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"
